{
	"name": "DF_CustomerPurchases",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Storage_demobits_OLTP_PurchaseOrder",
						"type": "DatasetReference"
					},
					"name": "PurchaseOrder"
				},
				{
					"dataset": {
						"referenceName": "DS_Storage_demobits_OLTP_Customer",
						"type": "DatasetReference"
					},
					"name": "Customer"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_SQL_TargetDB_Aug2022CustomerPurchases",
						"type": "DatasetReference"
					},
					"name": "Output"
				}
			],
			"transformations": [
				{
					"name": "PurchaseOrderProjection"
				},
				{
					"name": "CustomerProjection"
				},
				{
					"name": "QualityCheckQuantity"
				},
				{
					"name": "JoinStreams"
				},
				{
					"name": "MetricCalculation"
				}
			],
			"scriptLines": [
				"source(output(",
				"          PurchaseOrderID as string,",
				"          { CustomerCode} as string,",
				"          ProductCode as string,",
				"          EmployeeCode as string,",
				"          { PuchaseOrderDate} as string,",
				"          { Quantity} as long,",
				"          { UnitPrice} as decimal(10,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> PurchaseOrder",
				"source(output(",
				"          CustomerCode as string,",
				"          { CustomerName} as string,",
				"          { Address} as string,",
				"          { PhoneNumber} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Customer",
				"PurchaseOrder select(mapColumn(",
				"          { CustomerCode},",
				"          { Quantity}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> PurchaseOrderProjection",
				"Customer select(mapColumn(",
				"          CustomerCode,",
				"          { CustomerName}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> CustomerProjection",
				"PurchaseOrderProjection filter(greater({ Quantity}, 0)) ~> QualityCheckQuantity",
				"QualityCheckQuantity, CustomerProjection join({ CustomerCode} == CustomerCode,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinStreams",
				"JoinStreams aggregate(groupBy({ CustomerCode},",
				"          { CustomerName}),",
				"     ProductsPurchased = sum({ Quantity})) ~> MetricCalculation",
				"MetricCalculation sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CustomerName as string,",
				"          ProductsPurchased as long",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          CustomerName = { CustomerName},",
				"          ProductsPurchased",
				"     )) ~> Output"
			]
		}
	}
}